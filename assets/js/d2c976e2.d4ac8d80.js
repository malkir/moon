"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8095],{5318:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(g,l(l({ref:t},s),{},{components:r})):n.createElement(g,l({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9022:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7378),a=r(9619);function o(e){let{header:t,updated:r,version:o}=e;return n.createElement(a.Z,{text:"v"+o,variant:r?"success":"info",className:t?"absolute right-0 top-1.5":"ml-2"})}},9619:(e,t,r)=>{r.d(t,{Z:()=>p});var n=r(7378),a=r(8944),o=r(8896);const l={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function p(e){let{className:t,icon:r,text:p,variant:i}=e;return n.createElement("span",{className:(0,a.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",i?l[i]:"bg-gray-100 text-gray-800",t)},r&&n.createElement(o.Z,{icon:r,className:"mr-1"}),p)}},6448:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=r(5773),a=(r(7378),r(5318)),o=r(9022);const l={title:"dep-graph"},p=void 0,i={unversionedId:"commands/dep-graph",id:"commands/dep-graph",title:"dep-graph",description:"The moon dep-graph [target] (or moon dg) command will generate a dependency graph of all",source:"@site/docs/commands/dep-graph.mdx",sourceDirName:"commands",slug:"/commands/dep-graph",permalink:"/docs/commands/dep-graph",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/dep-graph.mdx",tags:[],version:"current",frontMatter:{title:"dep-graph"},sidebar:"docs",previous:{title:"clean",permalink:"/docs/commands/clean"},next:{title:"init",permalink:"/docs/commands/init"}},c={},s=[{value:"Arguments",id:"arguments",level:3},{value:"Example output",id:"example-output",level:2}],d={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{header:!0,version:"0.7",mdxType:"VersionLabel"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"moon dep-graph [target]")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"moon dg"),") command will generate a dependency graph of all\nactions, targets, and tasks within the workspace, and will output the graph in\n",(0,a.kt)("a",{parentName:"p",href:"https://graphviz.org/doc/info/lang.html"},"Graphviz DOT format"),". This output can then be used by any\ntool or program that supports DOT, for example, this\n",(0,a.kt)("a",{parentName:"p",href:"https://dreampuf.github.io/GraphvizOnline"},"live preview visualizer"),"."),(0,a.kt)("p",null,"In the future we aim to replace this with an interactive visualizer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon dep-graph > graph.dot\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A target can be passed to focus the graph, including dependencies ",(0,a.kt)("em",{parentName:"p"},"and")," dependents. For example,\n",(0,a.kt)("inlineCode",{parentName:"p"},"moon dep-graph app:build"),".")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[target]")," - Optional target to focus.")),(0,a.kt)("h2",{id:"example-output"},"Example output"),(0,a.kt)("p",null,"The following output is an example of the graph in DOT format."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dot"},'digraph {\n    0 [ label="SetupNodeToolchain" style=filled, shape=oval, fillcolor=black, fontcolor=white]\n    1 [ label="InstallNodeDeps" style=filled, shape=oval, fillcolor=gray, fontcolor=black]\n    2 [ label="SyncNodeProject(node)" style=filled, shape=oval, fillcolor=gray, fontcolor=black]\n    3 [ label="RunTarget(node:standard)" style=filled, shape=oval, fillcolor=gray, fontcolor=black]\n    1 -> 0 [ arrowhead=box, arrowtail=box]\n    2 -> 0 [ arrowhead=box, arrowtail=box]\n    3 -> 1 [ arrowhead=box, arrowtail=box]\n    3 -> 2 [ arrowhead=box, arrowtail=box]\n}\n')))}u.isMDXComponent=!0}}]);