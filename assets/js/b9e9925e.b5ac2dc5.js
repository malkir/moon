"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[297],{5318:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(r),m=o,g=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2328:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(5773),o=(r(7378),r(5318));const i={title:"File groups"},a=void 0,l={unversionedId:"concepts/file-group",id:"concepts/file-group",title:"File groups",description:"File groups are a mechanism for grouping similar types of files within a project using",source:"@site/docs/concepts/file-group.mdx",sourceDirName:"concepts",slug:"/concepts/file-group",permalink:"/docs/concepts/file-group",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/concepts/file-group.mdx",tags:[],version:"current",frontMatter:{title:"File groups"},sidebar:"docs",previous:{title:"Cache",permalink:"/docs/concepts/cache"},next:{title:"File patterns",permalink:"/docs/concepts/file-pattern"}},s={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Inheritance and merging",id:"inheritance-and-merging",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"File groups are a mechanism for grouping similar types of files within a project using\n",(0,o.kt)("a",{parentName:"p",href:"./file-pattern"},"file glob patterns or literal file paths"),". These groups are then used by\n",(0,o.kt)("a",{parentName:"p",href:"./task"},"tasks")," to calculate functionality like cache computation, affected files since last change,\ndeterministic builds, and more."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"File groups can be configured per project through ",(0,o.kt)("a",{parentName:"p",href:"../config/project"},(0,o.kt)("inlineCode",{parentName:"a"},"moon.yml")),", or for all\nprojects through ",(0,o.kt)("a",{parentName:"p",href:"../config/global-project"},(0,o.kt)("inlineCode",{parentName:"a"},".moon/project.yml")),"."),(0,o.kt)("h2",{id:"inheritance-and-merging"},"Inheritance and merging"),(0,o.kt)("p",null,"When a file group of the same name exists in both ",(0,o.kt)("a",{parentName:"p",href:"#configuration"},"configuration files"),", the\nproject-level group will override the workspace-level group, and all other workspace-level groups\nwill be inherited as-is."),(0,o.kt)("p",null,"A primary scenario in which to define file groups at the project-level is when you want to\n",(0,o.kt)("em",{parentName:"p"},"override")," file groups defined at the workspace-level. For example, say we want to override the\n",(0,o.kt)("inlineCode",{parentName:"p"},"sources"),' file group because our source folder is named "lib" and not "src", we would define our\nfile groups as followed.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/project.yml"',title:'".moon/project.yml"'},"fileGroups:\n  sources:\n    - 'src/**/*'\n    - 'types/**/*'\n  tests:\n    - 'tests/**/*.test.*'\n    - '**/__tests__/**/*'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"fileGroups:\n  # Overrides global\n  sources:\n    - 'lib/**/*'\n    - 'types/**/*'\n  # Inherited as-is\n  tests:\n    - 'tests/**/*.test.*'\n    - '**/__tests__/**/*'\n")))}u.isMDXComponent=!0}}]);