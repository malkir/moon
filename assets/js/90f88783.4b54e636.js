"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3481],{9798:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7378),r=n(8944);const l="tabItem_wHwb";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},3337:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(5773),r=n(7378),l=n(8944),o=n(6457),i=n(784),s=n(9947),p=n(3457);const u="tabList_J5MA",c="tabItem_l0OV";function d(e){var t,n;const{lazy:o,block:d,defaultValue:m,values:g,groupId:h,className:v}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=g?g:k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const w=null===m?m:null!=(t=null!=m?m:null==(n=k.find((e=>e.props.default)))?void 0:n.props.value)?t:k[0].props.value;if(null!==w&&!f.some((e=>e.value===w)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[x,C]=(0,r.useState)(w),E=[],{blockElementScrollPositionUntilNextRender:Z}=(0,p.o5)();if(null!=h){const e=y[h];null!=e&&e!==x&&f.some((t=>t.value===e))&&C(e)}const T=e=>{const t=e.currentTarget,n=E.indexOf(t),a=f[n].value;a!==x&&(Z(t),C(a),null!=h&&N(h,String(a)))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=E.indexOf(e.currentTarget)+1;n=null!=(a=E[t])?a:E[0];break}case"ArrowLeft":{var r;const t=E.indexOf(e.currentTarget)-1;n=null!=(r=E[t])?r:E[E.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},v)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>E.push(e),onKeyDown:j,onFocus:T,onClick:T},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},6642:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7378),r=n(4267),l=n(9798),o=n(3337);function i(e,t,n){let a=e.package?"yarn workspace "+e.package+" add ":"yarn add ";return e.dev?a+="--dev ":e.peer&&(a+="--peer "),n&&t&&!e.package&&(a+="-W "),a+=e.dep,a}function s(e,t){let n="pnpm add ";return e.dev?n+="--save-dev ":e.peer&&(n+="--save-peer "),e.package?n+="--filter "+e.package+" ":t&&(n+="-w "),n+=e.dep,n}function p(e){let t=i(e,!1,!0),n=s(e,!1);return e.package||(t+="\n\n# If using workspaces\n",n+="\n\n# If using workspaces\n",t+=i(e,!0,!0),n+=s(e,!0)),a.createElement(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}]},a.createElement(l.Z,{value:"yarn"},a.createElement(r.Z,{language:"shell"},i(e,!1,!1))),a.createElement(l.Z,{value:"yarn1"},a.createElement(r.Z,{language:"shell"},t)),a.createElement(l.Z,{value:"npm"},a.createElement(r.Z,{language:"shell"},function(e){let t="npm install ";return e.dev?t+="--save-dev ":e.peer&&(t+="--save-peer "),e.package&&(t+="--workspace "+e.package+" "),t+=e.dep,t}(e))),a.createElement(l.Z,{value:"pnpm"},a.createElement(r.Z,{language:"shell"},n)))}},9123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(5773),r=(n(7378),n(5318)),l=n(6642);const o={title:"Prettier example",sidebar_label:"Prettier"},i=void 0,s={unversionedId:"guides/examples/prettier",id:"guides/examples/prettier",title:"Prettier example",description:"Prettier has been prototyped in our",source:"@site/docs/guides/examples/prettier.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/prettier",permalink:"/docs/guides/examples/prettier",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/examples/prettier.mdx",tags:[],version:"current",frontMatter:{title:"Prettier example",sidebar_label:"Prettier"},sidebar:"docs",previous:{title:"Packemon",permalink:"/docs/guides/examples/packemon"},next:{title:"React",permalink:"/docs/guides/examples/react"}},p={},u=[{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Root-level",id:"root-level",level:3},{value:"Project-level",id:"project-level",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to use <code>--write</code>?",id:"how-to-use---write",level:3}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Prettier has been prototyped in our\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/examples/blob/master/.moon/project.yml#L41"},"examples repository"),",\ncheck it out!")),(0,r.kt)("p",null,"In this guide, you'll learn how to integrate ",(0,r.kt)("a",{parentName:"p",href:"https://prettier.io/"},"Prettier")," into moon."),(0,r.kt)("p",null,"Begin by installing ",(0,r.kt)("inlineCode",{parentName:"p"},"prettier")," in your root. We suggest using the same version across the entire\nrepository."),(0,r.kt)(l.Z,{dep:"prettier",dev:!0,mdxType:"AddDepsTabs"}),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Since code formatting is a universal workflow, add a ",(0,r.kt)("inlineCode",{parentName:"p"},"format")," task to\n",(0,r.kt)("a",{parentName:"p",href:"../../config/global-project"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/project.yml"))," with the following parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/project.yml"',title:'".moon/project.yml"'},"tasks:\n    format:\n        command:\n            - 'prettier'\n            # Use the same config for the entire repo\n            - '--config'\n            - '@in(4)'\n            # Use the same ignore patterns as well\n            - '--ignore-path'\n            - '@in(3)'\n            # Fail for unformatted code\n            - '--check'\n            # Run in current dir\n            - '.'\n        inputs:\n            # Source and test files\n            - 'src/**/*'\n            - 'tests/**/*'\n            # Config and other files\n            - '**/*.{md,mdx,yml,yaml,json}'\n            # Root configs, any format\n            - '/.prettierignore'\n            - '/.prettierrc.*'\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"root-level"},"Root-level"),(0,r.kt)("p",null,"The root-level Prettier config is ",(0,r.kt)("em",{parentName:"p"},"required"),", as it defines conventions and standards to apply to\nthe entire repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".prettierrc.js"',title:'".prettierrc.js"'},"module.exports = {\n  arrowParens: 'always',\n  semi: true,\n  singleQuote: true,\n  tabWidth: 2,\n  trailingComma: 'all',\n  useTabs: true,\n};\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".prettierignore")," file must also be defined at the root, as\n",(0,r.kt)("a",{parentName:"p",href:"https://prettier.io/docs/en/ignore.html#ignoring-files-prettierignore"},"only 1 ignore file")," can\nexist in a repository. We ensure this ignore file is used by passing ",(0,r.kt)("inlineCode",{parentName:"p"},"--ignore-path")," above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".prettierignore"',title:'".prettierignore"'},"node_modules/\n*.min.js\n*.map\n*.snap\n")),(0,r.kt)("h3",{id:"project-level"},"Project-level"),(0,r.kt)("p",null,"We suggest ",(0,r.kt)("em",{parentName:"p"},"against")," project-level configurations, as the entire repository should be formatted\nusing the same standards. However, if you're migrating code and need an escape hatch,\n",(0,r.kt)("a",{parentName:"p",href:"https://prettier.io/docs/en/configuration.html#configuration-overrides"},"overrides in the root")," will\nwork."),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("h3",{id:"how-to-use---write"},"How to use ",(0,r.kt)("inlineCode",{parentName:"h3"},"--write"),"?"),(0,r.kt)("p",null,"Unfortunately, this isn't currently possible, as the ",(0,r.kt)("inlineCode",{parentName:"p"},"prettier")," binary itself requires either the\n",(0,r.kt)("inlineCode",{parentName:"p"},"--check")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--write")," options, and since we're configuring ",(0,r.kt)("inlineCode",{parentName:"p"},"--check")," in the task above, that takes\nprecedence. This is also the preferred pattern as checks will run (and fail) in CI."),(0,r.kt)("p",null,"To work around this limitation, we suggest the following alternatives:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Configure your editor to run Prettier on save."),(0,r.kt)("li",{parentName:"ul"},"Define another task to write the formatted code, like ",(0,r.kt)("inlineCode",{parentName:"li"},"format-write"),".")))}d.isMDXComponent=!0}}]);