"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6065],{9798:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7378),l=t(8944);const o="tabItem_wHwb";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,i),hidden:t},n)}},3337:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(5773),l=t(7378),o=t(8944),i=t(6457),r=t(784),s=t(9947),p=t(3457);const c="tabList_J5MA",u="tabItem_l0OV";function d(e){var n,t;const{lazy:i,block:d,defaultValue:m,values:k,groupId:g,className:b}=e,f=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=k?k:f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),v=(0,r.l)(h,((e,n)=>e.value===n.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(n=null!=m?m:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?n:f[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:j}=(0,s.U)(),[w,x]=(0,l.useState)(y),E=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=g){const e=N[g];null!=e&&e!==w&&h.some((n=>n.value===e))&&x(e)}const C=e=>{const n=e.currentTarget,t=E.indexOf(n),a=h[t].value;a!==w&&(T(n),x(a),null!=g&&j(g,String(a)))},Z=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=E.indexOf(e.currentTarget)+1;t=null!=(a=E[n])?a:E[0];break}case"ArrowLeft":{var l;const n=E.indexOf(e.currentTarget)-1;t=null!=(l=E[n])?l:E[E.length-1];break}}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},b)},h.map((e=>{let{value:n,label:t,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>E.push(e),onKeyDown:Z,onFocus:C,onClick:C},i,{className:(0,o.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":w===n})}),null!=t?t:n)}))),i?(0,l.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function m(e){const n=(0,i.Z)();return l.createElement(d,(0,a.Z)({key:String(n)},e))}},6642:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(7378),l=t(4267),o=t(9798),i=t(3337);function r(e,n,t){let a=e.package?"yarn workspace "+e.package+" add ":"yarn add ";return e.dev?a+="--dev ":e.peer&&(a+="--peer "),t&&n&&!e.package&&(a+="-W "),a+=e.dep,a}function s(e,n){let t="pnpm add ";return e.dev?t+="--save-dev ":e.peer&&(t+="--save-peer "),e.package?t+="--filter "+e.package+" ":n&&(t+="-w "),t+=e.dep,t}function p(e){let n=r(e,!1,!0),t=s(e,!1);return e.package||(n+="\n\n# If using workspaces\n",t+="\n\n# If using workspaces\n",n+=r(e,!0,!0),t+=s(e,!0)),a.createElement(i.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}]},a.createElement(o.Z,{value:"yarn"},a.createElement(l.Z,{language:"shell"},r(e,!1,!1))),a.createElement(o.Z,{value:"yarn1"},a.createElement(l.Z,{language:"shell"},n)),a.createElement(o.Z,{value:"npm"},a.createElement(l.Z,{language:"shell"},function(e){let n="npm install ";return e.dev?n+="--save-dev ":e.peer&&(n+="--save-peer "),e.package&&(n+="--workspace "+e.package+" "),n+=e.dep,n}(e))),a.createElement(o.Z,{value:"pnpm"},a.createElement(l.Z,{language:"shell"},t)))}},5453:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=t(5773),l=(t(7378),t(5318)),o=t(3337),i=t(9798),r=t(6642);const s={title:"Packemon example",sidebar_label:"Packemon"},p=void 0,c={unversionedId:"guides/examples/packemon",id:"guides/examples/packemon",title:"Packemon example",description:"Packemon has been prototyped in our",source:"@site/docs/guides/examples/packemon.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/packemon",permalink:"/docs/guides/examples/packemon",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/examples/packemon.mdx",tags:[],version:"current",frontMatter:{title:"Packemon example",sidebar_label:"Packemon"},sidebar:"guides",previous:{title:"Next.js",permalink:"/docs/guides/examples/next"},next:{title:"Prettier",permalink:"/docs/guides/examples/prettier"}},u={},d=[{value:"Setup",id:"setup",level:2},{value:"TypeScript integration",id:"typescript-integration",level:3},{value:"Build targets",id:"build-targets",level:3}],m={toc:d};function k(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Packemon has been prototyped in our\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/examples/blob/master/.moon/project.yml#L22"},"examples repository"),",\ncheck it out!")),(0,l.kt)("p",null,"In this guide, you'll learn how to integrate ",(0,l.kt)("a",{parentName:"p",href:"https://packemon.dev/"},"Packemon")," into moon. Packemon\nis a tool for properly building npm packages for distribution, it does this by providing the\nfollowing functionality:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Compiles source code to popular formats: CJS, MJS, ESM, UMD, etc."),(0,l.kt)("li",{parentName:"ul"},"Validates the ",(0,l.kt)("inlineCode",{parentName:"li"},"package.json")," for incorrect fields or values."),(0,l.kt)("li",{parentName:"ul"},"Generates ",(0,l.kt)("inlineCode",{parentName:"li"},"exports")," mappings for ",(0,l.kt)("inlineCode",{parentName:"li"},"package.json")," based on the define configuration."),(0,l.kt)("li",{parentName:"ul"},"And many more ",(0,l.kt)("a",{parentName:"li",href:"https://packemon.dev/docs/features"},"optimizations and features"),"!")),(0,l.kt)("p",null,"Begin by installing ",(0,l.kt)("inlineCode",{parentName:"p"},"packemon")," in your root. We suggest using the same version across the entire\nrepository."),(0,l.kt)(r.Z,{dep:"packemon",dev:!0,mdxType:"AddDepsTabs"}),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("p",null,"Package building does not apply to every project, only packages, so where you place the build task\nis up to you. The following patterns are suggested:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"buildPackage")," task in ",(0,l.kt)("a",{parentName:"li",href:"../../config/global-project"},(0,l.kt)("inlineCode",{parentName:"a"},".moon/project.yml")),", which can be\ninherited by package based projects."),(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"build")," task in each ",(0,l.kt)("a",{parentName:"li",href:"../../config/project"},(0,l.kt)("inlineCode",{parentName:"a"},"moon.yml")),".")),(0,l.kt)(o.Z,{groupId:"config-type",defaultValue:"global",values:[{label:"Globally inherited",value:"global"},{label:"Per project",value:"local"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"global",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/project.yml"',title:'".moon/project.yml"'},"buildPackage:\n    command:\n        - 'packemon'\n        - 'pack'\n        # Add `engines` field to package\n        - '--addEngines'\n        # Add `exports` field to package\n        - '--addExports'\n        # Generate TypeScript declarations\n        - '--declaration'\n        - '--declarationConfig'\n        - 'tsconfig.build.json'\n    inputs:\n        # Source files only\n        - 'src/**/*'\n        - 'package.json'\n        # A build specific tsconfig\n        - 'tsconfig.build.json'\n        - '/tsconfig.options.json'\n    outputs:\n        # Matches `compilerOptions.outDir`\n        - 'dts'\n    env:\n        NODE_ENV: 'production'\n")),(0,l.kt)("p",null,"With this being defined globally, all package-based projects can inherit this task and rename it as\nfollows."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<package>/moon.yml"',title:'"<package>/moon.yml"'},"# Rename the `buildPackage` task to `build` for this project\nworkspace:\n    inheritedTasks:\n        rename:\n            buildPackage: 'build'\n\n# Define additional compiled files unique to this project\ntasks:\n    build:\n        outputs:\n            - 'cjs'\n")),(0,l.kt)("p",null,"However, for other project types like applications, this task will need to be ",(0,l.kt)("em",{parentName:"p"},"excluded"),", otherwise\nit will run and fail in CI."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<app>/moon.yml"',title:'"<app>/moon.yml"'},"# Exclude the `buildPackage` task for this project\nworkspace:\n    inheritedTasks:\n        exclude: ['buildPackage']\n"))),(0,l.kt)(i.Z,{value:"local",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<package>/moon.yml"',title:'"<package>/moon.yml"'},"build:\n    command:\n        - 'packemon'\n        - 'pack'\n        # Add `engines` field to package\n        - '--addEngines'\n        # Add `exports` field to package\n        - '--addExports'\n        # Generate TypeScript declarations\n        - '--declaration'\n        - '--declarationConfig'\n        - 'tsconfig.build.json'\n    inputs:\n        # Source files only\n        - 'src/**/*'\n        - 'package.json'\n        # A build specific tsconfig\n        - 'tsconfig.build.json'\n        - '/tsconfig.options.json'\n    outputs:\n        # Compiled files: lib, esm, cjs, mjs, etc\n        - 'lib'\n        # Matches `compilerOptions.outDir`\n        - 'dts'\n    env:\n        NODE_ENV: 'production'\n")))),(0,l.kt)("h3",{id:"typescript-integration"},"TypeScript integration"),(0,l.kt)("p",null,"Packemon has built-in support for TypeScript, but to ",(0,l.kt)("em",{parentName:"p"},"not")," conflict with a\n",(0,l.kt)("a",{parentName:"p",href:"./typescript"},"typecheck task"),", a separate ",(0,l.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file is required, which we named\n",(0,l.kt)("inlineCode",{parentName:"p"},"tsconfig.build.json"),"."),(0,l.kt)("p",null,"This config is necessary to ",(0,l.kt)("em",{parentName:"p"},"only")," compile source files, and to not include unwanted files in the\ndeclaration output directory (",(0,l.kt)("inlineCode",{parentName:"p"},"dts"),")."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.build.json"',title:'"tsconfig.build.json"'},'{\n  "extends": "../../tsconfig.options.json",\n  "compilerOptions": {\n    "outDir": "dts",\n    "rootDir": "src"\n  },\n  "include": ["src/**/*"],\n  "references": []\n}\n')),(0,l.kt)("h3",{id:"build-targets"},"Build targets"),(0,l.kt)("p",null,"To configure the target platform(s) and format(s), you must define a\n",(0,l.kt)("a",{parentName:"p",href:"https://packemon.dev/docs/config"},(0,l.kt)("inlineCode",{parentName:"a"},"packemon")," block")," in the project's ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),". The chosen\nformats must also be listed as ",(0,l.kt)("inlineCode",{parentName:"p"},"outputs")," in the task."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "package",\n  // ...\n  "packemon": {\n    "format": "esm",\n    "platform": "browser"\n  }\n}\n')))}k.isMDXComponent=!0}}]);