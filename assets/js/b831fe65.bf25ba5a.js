"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9157],{5318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7467:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(5773),r=(n(7378),n(5318));const o={title:"Projects"},i=void 0,p={unversionedId:"concepts/project",id:"concepts/project",title:"Projects",description:"A project is a library, application, package, binary, tool, etc, that contains source files, test",source:"@site/docs/concepts/project.mdx",sourceDirName:"concepts",slug:"/concepts/project",permalink:"/docs/concepts/project",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/concepts/project.mdx",tags:[],version:"current",frontMatter:{title:"Projects"},sidebar:"docs",previous:{title:"File patterns",permalink:"/docs/concepts/file-pattern"},next:{title:"Targets",permalink:"/docs/concepts/target"}},c={},s=[{value:"Names",id:"names",level:2},{value:"Aliases",id:"aliases",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Configuration",id:"configuration",level:2},{value:"<code>package.json</code>",id:"packagejson",level:3},{value:"<code>tsconfig.json</code>",id:"tsconfigjson",level:3}],l={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A project is a library, application, package, binary, tool, etc, that contains source files, test\nfiles, assets, resources, and more. A project must exist and be configured within a\n",(0,r.kt)("a",{parentName:"p",href:"./workspace"},"workspace"),"."),(0,r.kt)("h2",{id:"names"},"Names"),(0,r.kt)("p",null,"A project name (or identifier) is a unique resource for locating a project. The name is explicitly\nconfigured within ",(0,r.kt)("a",{parentName:"p",href:"../config/workspace"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/workspace.yml")),", as a key within the\n",(0,r.kt)("a",{parentName:"p",href:"../config/workspace#projects"},(0,r.kt)("inlineCode",{parentName:"a"},"projects"))," setting, and can be written in camel/kebab/snake case.\nNames support ",(0,r.kt)("inlineCode",{parentName:"p"},"a-z"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"A-Z"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"0-9"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"-"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),", and must start with a character."),(0,r.kt)("p",null,"Names are used heavily by configuration and the command line to link and reference everything.\nThey're also a much easier concept for remembering projects than file system paths, and they\ntypically can be written with less key strokes."),(0,r.kt)("p",null,"Lastly, a project name can be paired with a task name to create a ",(0,r.kt)("a",{parentName:"p",href:"./target"},"target"),"."),(0,r.kt)("h2",{id:"aliases"},"Aliases"),(0,r.kt)("p",null,"Aliases are a secondary approach for naming projects, and can be used as a drop-in replacement for\nstandard names. What this means is that an alias can also be used when configuring dependencies, or\ndefining ",(0,r.kt)("a",{parentName:"p",href:"./target"},"targets"),"."),(0,r.kt)("p",null,"However, the difference between aliases and names is that aliases ",(0,r.kt)("em",{parentName:"p"},"can not")," be explicit configured\nin moon. Instead, they are specific to a project's primary programming language, and are inferred\nbased on that context (when enabled in settings). For example, a JavaScript or TypeScript project\nwill use the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," field from its ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," as the alias."),(0,r.kt)("p",null,"Because of this, a project can either be reference by its name or alias, or both. Choose the pattern\nthat makes the most sense for your company or team!"),(0,r.kt)("h2",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"Projects can depend on other projects within the ",(0,r.kt)("a",{parentName:"p",href:"./workspace"},"workspace")," to build a project graph,\nand in turn, a dependency graph for executing ",(0,r.kt)("a",{parentName:"p",href:"./task"},"tasks"),". Project dependencies are divided into\n2 categories:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Explicit dependencies")," - These are dependencies that are explicitly defined in a project's\n",(0,r.kt)("a",{parentName:"li",href:"../config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml"))," config file, using the ",(0,r.kt)("a",{parentName:"li",href:"../config/project#dependson"},(0,r.kt)("inlineCode",{parentName:"a"},"dependsOn")),"\nsetting. Explicit dependencies provide more built-in functionality than implicit,\n",(0,r.kt)("a",{parentName:"li",href:"../faq#what-should-be-considered-the-source-of-truth"},"like project syncing"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Implicit dependencies")," - These are dependencies that are implicitly discovered by moon when\nscanning the repository. How an implicit dependency is discovered is based on the project's\n",(0,r.kt)("a",{parentName:"li",href:"../config/project#language"},(0,r.kt)("inlineCode",{parentName:"a"},"language"))," setting, and how that language's ecosystem functions.")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Projects can be configured with an optional ",(0,r.kt)("a",{parentName:"p",href:"../config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml"))," in the project root, or\nthrough the optional ",(0,r.kt)("a",{parentName:"p",href:"../config/global-project"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/project.yml"))," which applies to all projects."),(0,r.kt)("h3",{id:"packagejson"},(0,r.kt)("inlineCode",{parentName:"h3"},"package.json")),(0,r.kt)("p",null,"A moon project ",(0,r.kt)("em",{parentName:"p"},"does not require")," a ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", but when one exists, the following functionality\nis enabled."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dependency versions are included when computing cache keys and hashes."),(0,r.kt)("li",{parentName:"ul"},"Depended on projects (",(0,r.kt)("a",{parentName:"li",href:"../config/project#dependson"},(0,r.kt)("inlineCode",{parentName:"a"},"dependsOn")),") are mapped as workspace\ndependencies (when applicable).")),(0,r.kt)("h3",{id:"tsconfigjson"},(0,r.kt)("inlineCode",{parentName:"h3"},"tsconfig.json")),(0,r.kt)("p",null,"A moon project ",(0,r.kt)("em",{parentName:"p"},"does not require")," TypeScript or a ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),", but when one exists, the\nfollowing functionality is enabled."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Depended on projects (",(0,r.kt)("a",{parentName:"li",href:"../config/project#dependson"},(0,r.kt)("inlineCode",{parentName:"a"},"dependsOn")),") are mapped as TypeScript project\nreferences (when applicable).")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"File name can be customized with the\n",(0,r.kt)("a",{parentName:"p",href:"../config/workspace#projectconfigfilename"},(0,r.kt)("inlineCode",{parentName:"a"},"typescript.projectConfigFileName"))," setting.")))}d.isMDXComponent=!0}}]);