"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3287],{5318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},360:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(5773),a=(n(7378),n(5318));const o={title:"Targets"},l=void 0,i={unversionedId:"concepts/target",id:"concepts/target",title:"Targets",description:"A target is an identifier that pairs a project to one of its tasks, in the",source:"@site/docs/concepts/target.mdx",sourceDirName:"concepts",slug:"/concepts/target",permalink:"/docs/concepts/target",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/concepts/target.mdx",tags:[],version:"current",frontMatter:{title:"Targets"},sidebar:"docs",previous:{title:"Projects",permalink:"/docs/concepts/project"},next:{title:"Tasks",permalink:"/docs/concepts/task"}},c={},s=[{value:"Project scopes",id:"project-scopes",level:2},{value:"All projects",id:"all-projects",level:3},{value:"Dependencies <code>^</code>",id:"dependencies-",level:3},{value:"Self <code>~</code>",id:"self-",level:3}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A target is an identifier that pairs a ",(0,a.kt)("a",{parentName:"p",href:"./project"},"project")," to one of its ",(0,a.kt)("a",{parentName:"p",href:"./task"},"tasks"),", in the\nformat of ",(0,a.kt)("inlineCode",{parentName:"p"},"project_name_or_alias:task_name"),"."),(0,a.kt)("p",null,"Targets are used by terminal commands..."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon run designSystem:build\n")),(0,a.kt)("p",null,"And configurations for declaring cross-project or cross-task dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"tasks:\n  build:\n    command: 'webpack'\n    deps:\n      - 'designSystem:build'\n")),(0,a.kt)("h2",{id:"project-scopes"},"Project scopes"),(0,a.kt)("p",null,"While a target typically pairs project and task names, we also support advanced targets through a\nconcept known as project scopes. Scopes allow us to easily define targets with external or many\nsources, but ",(0,a.kt)("em",{parentName:"p"},"are not available in all contexts"),"."),(0,a.kt)("h3",{id:"all-projects"},"All projects"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Only available on the command line when running targets.")),(0,a.kt)("p",null,"For situations where you want to run a specific target in ",(0,a.kt)("em",{parentName:"p"},"all")," projects, for example ",(0,a.kt)("inlineCode",{parentName:"p"},"lint"),"ing, you\ncan utilize the all projects scope by omitting the project from the target: ",(0,a.kt)("inlineCode",{parentName:"p"},":lint"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Run `lint` in project `app`\n$ moon run app:lint\n\n# Run `lint` in all projects\n$ moon run :lint\n")),(0,a.kt)("h3",{id:"dependencies-"},"Dependencies ",(0,a.kt)("inlineCode",{parentName:"h3"},"^")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Only available when configuring a task.")),(0,a.kt)("p",null,"When you want to include a reference for each project in your\n",(0,a.kt)("a",{parentName:"p",href:"../config/project#dependson"},(0,a.kt)("inlineCode",{parentName:"a"},"dependsOn"))," list, you can utilize the ",(0,a.kt)("inlineCode",{parentName:"p"},"^")," scope. This will be\nexpanded to ",(0,a.kt)("em",{parentName:"p"},"all")," depended on projects. If you do not want all projects, then you'll need to\nexplicitly define them."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"dependsOn:\n    - 'apiClients'\n    - 'designSystem'\n\n# Configured as\ntasks:\n    build:\n        command: 'webpack'\n        deps:\n            - '^:build'\n\n# Resolves to\ntasks:\n    build:\n        command: 'webpack'\n        deps:\n            - 'apiClients:build'\n            - 'designSystem:build'\n")),(0,a.kt)("h3",{id:"self-"},"Self ",(0,a.kt)("inlineCode",{parentName:"h3"},"~")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Only available when configuring a task.")),(0,a.kt)("p",null,"When referring to another task within the current project, you can utilize the ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," scope, which will\nbe expanded to the current project's name. This is useful for situations where the name is unknown,\nfor example, when configuring ",(0,a.kt)("a",{parentName:"p",href:"../config/global-project"},(0,a.kt)("inlineCode",{parentName:"a"},".moon/project.yml")),". Or if you just want a\nshortcut!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/project.yml"',title:'".moon/project.yml"'},"# Configured as\ntasks:\n    lint:\n        command: 'eslint'\n        deps:\n            - '~:typecheck'\n    typecheck:\n        command: 'tsc'\n\n# Resolves to (assuming project is \"foo\")\ntasks:\n    lint:\n        command: 'eslint'\n        deps:\n            - 'foo:typecheck'\n    typecheck:\n        command: 'tsc'\n")))}u.isMDXComponent=!0}}]);