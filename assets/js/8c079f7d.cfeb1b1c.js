"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5880],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=i,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7920:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(5773),i=(n(7378),n(5318));const a={title:"init"},o=void 0,l={unversionedId:"commands/init",id:"commands/init",title:"init",description:"The moon init [dest] command will initialize moon into a repository and scaffold config files by",source:"@site/docs/commands/init.mdx",sourceDirName:"commands",slug:"/commands/init",permalink:"/docs/commands/init",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/init.mdx",tags:[],version:"current",frontMatter:{title:"init"},sidebar:"docs",previous:{title:"dep-graph",permalink:"/docs/commands/dep-graph"},next:{title:"migrate",permalink:"/docs/commands/migrate"}},p={},s=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"moon init [dest]")," command will initialize moon into a repository and scaffold config files by\ncreating a ",(0,i.kt)("inlineCode",{parentName:"p"},".moon")," folder. By default, moon will automatically infer the Node.js version, package\nmanager, and potential projects based on existing files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon init\n\n# In another directory\n$ moon init ./app\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[dest]")," - Destination to initialize and scaffold into. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},".")," (current working\ndirectory).")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--force")," - Overwrite existing config files if they exist."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--inheritProjects <as>")," - Sets the default value on whether to inherit projects from\n",(0,i.kt)("inlineCode",{parentName:"li"},"package.json")," workspaces. Supports:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"none")," - Do not inherit projects."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"globs-list")," - Inherit globs as-is and configure as a list."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"projects-map")," - Glob the file system for projects and configure as a map."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--packageManager <type>")," - Sets the default value for which package manager to use, if none were\ndetected.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Types: ",(0,i.kt)("inlineCode",{parentName:"li"},"npm"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"pnpm"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"yarn")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--yes")," - Skip all prompts and use default values.")))}m.isMDXComponent=!0}}]);