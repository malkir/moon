"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2656],{5318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9022:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7378),o=n(9619);function a(e){let{header:t,updated:n,version:a}=e;return r.createElement(o.Z,{text:"v"+a,variant:n?"success":"info",className:t?"absolute right-0 top-1.5":"ml-2"})}},9619:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7378),o=n(8944),a=n(8896);const i={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function s(e){let{className:t,icon:n,text:s,variant:l}=e;return r.createElement("span",{className:(0,o.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?i[l]:"bg-gray-100 text-gray-800",t)},n&&r.createElement(a.Z,{icon:n,className:"mr-1"}),s)}},9759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(5773),o=(n(7378),n(5318)),a=n(9022);const i={title:"Root-level project"},s=void 0,l={unversionedId:"guides/root-project",id:"guides/root-project",title:"Root-level project",description:"Coming from other repositories or build systems, you may be familiar with tasks available at the",source:"@site/docs/guides/root-project.mdx",sourceDirName:"guides",slug:"/guides/root-project",permalink:"/docs/guides/root-project",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/root-project.mdx",tags:[],version:"current",frontMatter:{title:"Root-level project"},sidebar:"guides",previous:{title:"Task profiling",permalink:"/docs/guides/profile"},next:{title:"Sharing workspace configuration",permalink:"/docs/guides/sharing-config"}},c={},p=[{value:"Caveats",id:"caveats",level:2},{value:"Greedy inputs",id:"greedy-inputs",level:3},{value:"Inherited tasks",id:"inherited-tasks",level:3}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(a.Z,{header:!0,version:"0.9",mdxType:"VersionLabel"}),(0,o.kt)("p",null,"Coming from other repositories or build systems, you may be familiar with tasks available at the\nrepository root, in which one-off, organization, maintenance, or process oriented tasks can be ran.\nmoon supports this through a concept known as a root-level project."),(0,o.kt)("p",null,"Begin by adding the root to ",(0,o.kt)("a",{parentName:"p",href:"../config/workspace#projects"},(0,o.kt)("inlineCode",{parentName:"a"},"projects"))," with a source value of ",(0,o.kt)("inlineCode",{parentName:"p"},"."),"\n(current directory relative from the workspace)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"# As a map\nprojects:\n  root: '.'\n\n# As a list of globs\nprojects:\n  - '.'\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When using globs, the root project's name will be inferred from the repository folder name. Be\nwary of this as it can change based on what a developer has checked out as.")),(0,o.kt)("p",null,"Once added, create a ",(0,o.kt)("a",{parentName:"p",href:"../config/project"},(0,o.kt)("inlineCode",{parentName:"a"},"moon.yml"))," in the root of the repository. From here you\ncan define tasks that can be ran using this new root-level project name, for example,\n",(0,o.kt)("inlineCode",{parentName:"p"},"moon run root:<task>"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"tasks:\n    versionCheck:\n        command: 'yarn version check'\n        inputs: []\n        options:\n            cache: false\n")),(0,o.kt)("p",null,"And that's it, but there are a few caveats to be aware of..."),(0,o.kt)("h2",{id:"caveats"},"Caveats"),(0,o.kt)("h3",{id:"greedy-inputs"},"Greedy inputs"),(0,o.kt)("p",null,"Task ",(0,o.kt)("a",{parentName:"p",href:"../config/project#inputs"},(0,o.kt)("inlineCode",{parentName:"a"},"inputs"))," default to ",(0,o.kt)("inlineCode",{parentName:"p"},"**/*"),", which would result in root-level tasks\nscanning ",(0,o.kt)("em",{parentName:"p"},"all")," files in the repository. This will be a very expensive operation! We suggest\nrestricting inputs to a very succinct whitelist, or disabling inputs entirely."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"tasks:\n    oneOff:\n        # ...\n        inputs: []\n")),(0,o.kt)("h3",{id:"inherited-tasks"},"Inherited tasks"),(0,o.kt)("p",null,"Because a root project is still a project in the workspace, it will inherit all tasks defined in\n",(0,o.kt)("a",{parentName:"p",href:"../config/global-project"},(0,o.kt)("inlineCode",{parentName:"a"},".moon/project.yml")),", which may be not what you want. To mitigate this,\nyou can exclude some or all of these tasks in the root config with\n",(0,o.kt)("a",{parentName:"p",href:"../config/project#inheritedtasks"},(0,o.kt)("inlineCode",{parentName:"a"},"workspace.inheritedTasks")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"workspace:\n    inheritedTasks:\n        include: []\n")))}m.isMDXComponent=!0}}]);